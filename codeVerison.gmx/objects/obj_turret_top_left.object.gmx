<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_top_left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Veriables
hp = 3;
state = scr_enemy;

los = 200;
rspeed = 5;
distance_to_player = 10000;
active = false;
can_shoot = false;
ANG = 0;
xPointOfInterest = x + 1;
yPointOfInterest = y;
ammo = 1000000000000;
lenx = 14;
leny = 0;
cool_off = false;
spd = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cool_off = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// just dead
alarm[3] = room_speed/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;
/// execute
script_execute(state);
vspeed = 1;


distance_to_player = distance_to_object(obj_player);
player_width = sprite_get_width(obj_player.sprite_index);
player_height = sprite_get_height(obj_player.sprite_index);
player_average_size = (player_width + player_width) /2;

if (distance_to_player &lt;= los) {
    xPointOfInterest = obj_player.x;
    yPointOfInterest = obj_player.y;
    
    active = true;
}
else {
    active = false;
}

ANG = point_direction(x,y,obj_player.x,obj_player.y) - image_angle;

if (ANG &gt;= 360) {
    ANG = ANG mod 360;
}

if (active == true){
    if (ANG &lt; (player_average_size/4) || ANG &gt; (360 - player_average_size/4)) {
        can_shoot = true;
    }
    else {
        can_shoot = false;
    }
}
else {
    can_shoot = false;
}

pointdir = point_direction(x,y,xPointOfInterest, yPointOfInterest);
image_angle += sin(degtorad(pointdir - image_angle)) * rspeed;

if ((can_shoot == true) &amp;&amp; (ammo &gt; 0) &amp;&amp; (cool_off = false)) {
    ammo -= 1;
    var bullet_id;
    bullet_id = instance_create(x + lengthdir_x(lenx, image_angle) - lengthdir_y(leny, image_angle),
            y + lengthdir_y(lenx, image_angle) + lengthdir_x(leny, image_angle), obj_enemy_bullet);
    bullet_id.direction = image_angle;
    bullet_id.image_angle = bullet_id.direction;
    bullet_id.speed = 5;
    cool_off = true;
    alarm[11] = room_speed * 2;
    audio_play_sound(snd_turret, 1, false);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
